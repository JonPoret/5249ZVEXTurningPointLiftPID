#include "robot-config.h"
 
//this method is used to create all of the buttons that are seen on screen that are used to select the auton and to also go to skills.
void buildScreen() {
    Brain.Screen.setFont(vex::fontType::mono20);
    Brain.Screen.clearScreen();
    Brain.Screen.setFillColor(0);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.setPenWidth(3);
    Brain.Screen.drawRectangle(20,20,100,100);
    Brain.Screen.setFillColor(225);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.setPenWidth(3);
    Brain.Screen.drawRectangle(20,130,100,100);
    Brain.Screen.setFillColor(0);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.setPenWidth(3);
    Brain.Screen.drawRectangle(130,20,100,100);
    Brain.Screen.setFillColor(225);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.setPenWidth(3);
    Brain.Screen.drawRectangle(130,130,100,100);
    Brain.Screen.setFillColor(0);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.setPenWidth(3);
    Brain.Screen.setFillColor(225);
    Brain.Screen.setPenColor(vex::color::white);
    Brain.Screen.setPenWidth(3);
    Brain.Screen.setFillColor(vex::color::orange);
    Brain.Screen.drawRectangle(350,20,100,100);
    Brain.Screen.setFillColor(vex::color::purple);
    Brain.Screen.drawRectangle(350,130,100,100);
   
    //create text for first button
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.printAt(35,60,"RedClose");
    //create text for second button
    Brain.Screen.setFillColor(vex::color::red);
    Brain.Screen.printAt(150,60,"RedFar");
    //create text for third button
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.printAt(145,170,"BlueFar");
    //create text for fourth button
    Brain.Screen.setFillColor(vex::color::blue);
    Brain.Screen.printAt(25,170,"BlueClose");
    
    //create skills text
    Brain.Screen.setFillColor(vex::color::orange);
    Brain.Screen.printAt(370,60,"Skills");
    
    //create cancel text
    Brain.Screen.setFillColor(vex::color::purple);
    Brain.Screen.printAt(370,170,"Cancel");
    }
bool check = true;
//This is the main method where the program looks for user taps on the screen, and chooses an auton based on that, or if they dont, it stays on the selection screen.
int main() {
    int selectedauton = 0;
    buildScreen();
    
    int xpos;
    int ypos;
    while(selectedauton == 0) //while no auton is selected the code looks for the user to select an auton
    {
        Brain.Screen.clearLine();
        if(Brain.Screen.pressing())
        {
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            //This looks for the position on the screen that the user pressed in x and y values
        }
        
        if(xpos > 20 && xpos < 120 && ypos > 20 && ypos < 120) //this looks to see if the user tapped within the confines of a certain button and selects an auton based on where they pressed
        {
            Brain.Screen.setFillColor(vex::color::black);
            Brain.Screen.setPenColor(vex::color::black);
            Brain.Screen.drawRectangle(20,20,300,300);
            Brain.Screen.setPenColor(vex::color::white);
            Brain.Screen.setFont(vex::fontType::mono30);
            Brain.Screen.print("Close Red Selected");
            xpos = 0;
            ypos = 0;
            vex::task::sleep(5000);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 350 && xpos < 450 && ypos > 130 && ypos < 230)
            {
                Brain.Screen.clearScreen();
                buildScreen();
                selectedauton = 0;
            }
            selectedauton = 1;
        }
        if(xpos > 130 && xpos < 230 && ypos > 20 && ypos < 120)
        {
            Brain.Screen.setFillColor(vex::color::black);
            Brain.Screen.setPenColor(vex::color::black);
            Brain.Screen.drawRectangle(20,20,300,300);
            Brain.Screen.setPenColor(vex::color::white);
            Brain.Screen.setFont(vex::fontType::mono30);
            Brain.Screen.print("Far Red Selected");
            xpos= 0;
            ypos = 0;
            vex::task::sleep(5000);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 350 && xpos < 450 && ypos > 130 && ypos < 230)
            {
                Brain.Screen.clearScreen();
                buildScreen();
                selectedauton = 0;
            }
            selectedauton = 2;
        }
        if(xpos > 20 && xpos < 120 && ypos > 130 && ypos < 230)
        {
            Brain.Screen.setFillColor(vex::color::black);
            Brain.Screen.setPenColor(vex::color::black);
            Brain.Screen.drawRectangle(20,20,300,300);
            Brain.Screen.setPenColor(vex::color::white);
            Brain.Screen.setFont(vex::fontType::mono30);
            Brain.Screen.print("Close Blue Selected");
            xpos = 0;
            ypos = 0;
            vex::task::sleep(5000);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 350 && xpos < 450 && ypos > 130 && ypos < 230)
            {
                Brain.Screen.clearScreen();
                buildScreen();
                selectedauton = 0;
            }
            selectedauton = 4;
        }
        if(xpos > 130 && xpos < 230 && ypos > 130 && ypos < 230)
        {
            Brain.Screen.setFillColor(vex::color::black);
            Brain.Screen.setPenColor(vex::color::black);
            Brain.Screen.drawRectangle(20,20,300,300);
            Brain.Screen.setPenColor(vex::color::white);
            Brain.Screen.setFont(vex::fontType::mono30);
            Brain.Screen.print("Far Blue Selected");
            xpos = 0;
            ypos = 0;
            vex::task::sleep(5000);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 350 && xpos < 450 && ypos > 130 && ypos < 230)
            {
                Brain.Screen.clearScreen();
                buildScreen();
                selectedauton = 0;
            }
            selectedauton = 3;
        }
         if(xpos > 350 && xpos < 450 && ypos > 20 && ypos < 120)
        {
            Brain.Screen.setFillColor(vex::color::black);
            Brain.Screen.setPenColor(vex::color::black);
            Brain.Screen.drawRectangle(20,20,300,300);
            Brain.Screen.setPenColor(vex::color::white);
            Brain.Screen.setFont(vex::fontType::mono30);
            Brain.Screen.print("Skills Selected");
            xpos = 0;
            ypos = 0;
            vex::task::sleep(5000);
            xpos = Brain.Screen.xPosition();
            ypos = Brain.Screen.yPosition();
            if(xpos > 350 && xpos < 450 && ypos > 130 && ypos < 230)
            {
                Brain.Screen.clearScreen();
                buildScreen();
                selectedauton = 0;
            }
            selectedauton = 5;
        }
    }
}
